# This is a basic workflow to help you get started with Actions

name: Build and Push

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: clone repo
        uses: actions/checkout@v2

      - name: Get changed files since previous commit
        run: echo "CHANGED_FILES=$(./scripts/get-changed-files.sh)" >> $GITHUB_ENV
        
      - name: Get changed lambdas
        id: get-changed-lambdas
        uses: actions/github-script@v4
        env:
          CHANGED_FILES: ${{ env.CHANGED_FILES }}
        with:
          result-encoding: string
          script: |
            const changedFiles = process.env.CHANGED_FILES.split(' ');
            const lambdas = new Set([]);

            for (let file of changedFiles) {
                if (file.includes('lambdas')) {
                    const lambda = file.split('/')[1];
                    lambdas.add(lambda);
                }
            }

            return Array.from(lambdas).sort().join(' ')

      - name: Set date environment variable
        run: echo "DATETIME=$(date +"%Y.%m.%d")" >> $GITHUB_ENV
      
      - name: Set tag number
        run: echo "TAG_NUM=$(git tag | wc -l)" >> $GITHUB_ENV

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          tag_prefix: ""
          default_bump: false
          custom_tag: ${{ format('{0}-{1}', env.DATETIME, env.TAG_NUM) }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ format('changes made to {0}', steps.get-changed-lambdas.outputs.result) }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image(s) to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMG_TAG: ${{ env.DATETIME }}
          LAMBDAS: ${{ steps.get-changed-lambdas.outputs.result }}
        run: echo $CHANGED_FILES | xargs -n 1 -I{} ./scripts/build-push.sh {} y
